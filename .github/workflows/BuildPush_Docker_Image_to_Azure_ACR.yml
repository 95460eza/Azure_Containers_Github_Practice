name: Build and Push Docker Image to Azure ACR

on:
  push:
    branches:
      - main  # Adjust the branch as per your requirements

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Check out code in the Github repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Connect ot Azure ACR
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REGISTRY }} registryfordockercontainer.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          access-token: ${{ secrets.ACR_ACCESS_TOKEN }}

        # Enable Docker build Engine
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          # a Docker Context is all the files used when building an image. Specifying the Dockerfile (with -f if needed) is enough to tell Docker where to find those files
          # When you set "context: ." every files and folders in the "ROOT" directory of you GitHub "REPOSITORY" is sent by Github to the Docker daemon 
          context: .
          # To specify the location of the Dockerfile "WITHIN" the context. "./Dockerfile" means the Dockerfile is located "IN" the root directory of the repository
          file: ./Dockerfile_CONTAINER_for_APP_STAND_ALONE_run # Path to your Dockerfile
          push: true
          tags: ${{ secrets.ACR_REGISTRY }}/repositoryfordockercontainer:image_app_for_azure
